name: CI-CD for Ecs ci-nodejs-example

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: ci-nodejs-example
  ECS_CLUSTER: ci-nodejs-example-cluster
  ECS_SERVICE: ci-nodejs-example-service
  CONTAINER_NAME: app
  IMAGE_TAG: latest

jobs:
  build_and_push:
    name: Build, Push Docker Image, and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          echo "Building and pushing $IMAGE_URI"
          docker buildx build --platform linux/amd64 -t $IMAGE_URI . --push
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --force-new-deployment
